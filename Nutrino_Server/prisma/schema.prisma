generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ===== ENUMS =====

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum ActivityLevel {
  SEDENTARY
  LIGHTLY_ACTIVE
  MODERATELY_ACTIVE
  VERY_ACTIVE
  EXTREMELY_ACTIVE
}

enum SleepQuality {
  POOR
  FAIR
  GOOD
  EXCELLENT
}

enum Frequency {
  DAILY
  WEEKLY
  OCCASIONALLY
  MONTHLY
  RARELY
}

// ===== MODELS =====

model User {
  id      Int    @id @default(autoincrement())
  name    String
  email   String @unique
  clerkId String @unique

  healthProfile HealthProfile?
  badHabits     BadHabit[]
  sleepPatterns SleepPattern[]
  stressFactors StressSource[]
  mentalHealth  MentalHealth?

  @@map("users")
}

model HealthProfile {
  id                 Int            @id @default(autoincrement())
  userId             Int            @unique
  user               User           @relation(fields: [userId], references: [id])
  age                Int?
  gender             Gender?
  height             Float? // in cm
  weight             Float? // in kg
  activityLevel      ActivityLevel?
  medicalConditions  String[]
  allergies          String[]
  dietaryPreferences String[]
  foodAllergies      String[]
  mealFrequency      String?
  waterIntake        Float? // in liters/day

  pregnancyStatus Boolean?
  breastfeeding   Boolean?
  recentSurgery   Boolean?
  chronicPain     Boolean?
  digestiveIssues String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BadHabit {
  id                  Int       @id @default(autoincrement())
  userId              Int
  user                User      @relation(fields: [userId], references: [id])
  habitType           String
  specificHabit       String
  frequency           Frequency
  quantityPerOccasion Float?
  unit                String?
  duration            Int? // months
  lastOccurrence      DateTime?
  triggerFactors      String[]
  attemptedQuitting   Boolean   @default(false)
  quittingMethods     String[]
  impactSelfRating    Int? // 1-10
  notes               String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model SleepPattern {
  id                  Int           @id @default(autoincrement())
  userId              Int           @unique
  user                User          @relation(fields: [userId], references: [id])
  averageHours        Float?
  sleepQuality        SleepQuality?
  bedTime             String?
  wakeTime            String?
  sleepIssues         String[]
  useSleepAids        Boolean       @default(false)
  sleepAidTypes       String[]
  screenTimeBeforeBed Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model StressSource {
  id               Int       @id @default(autoincrement())
  userId           Int
  user             User      @relation(fields: [userId], references: [id])
  stressType       String
  stressLevel      Int // 1-10
  copingMechanisms String[]
  stressFrequency  Frequency
  physicalSymptoms String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model MentalHealth {
  id              Int       @id @default(autoincrement())
  userId          Int       @unique
  user            User      @relation(fields: [userId], references: [id])
  moodPatterns    String[]
  diagnosedIssues String[]
  therapyHistory  String?
  medication      String[]
  lastEvaluation  DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
